{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","setMovies","setMovie","useState","inputValue","setInputValue","isDataLoading","setIsDataLoading","isErrorShowed","setIsErrorShowed","findMovie","event","query","preventDefault","fetch","then","res","json","catch","Response","Error","receivedMovie","Title","Plot","Poster","imdbID","finally","onSubmit","htmlFor","type","id","placeholder","value","onChange","e","target","disabled","trim","classNames","onClick","some","item","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16d848d1.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport { MovieData } from '../../types/MovieData';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n  setMovies: (movies: Movie[]) => void;\n  movie: Movie | null;\n  setMovie: (movie: Movie | null) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  movies,\n  setMovies,\n  movie,\n  setMovie,\n}) => {\n  const [inputValue, setInputValue] = useState('');\n  const [isDataLoading, setIsDataLoading] = useState(false);\n  const [isErrorShowed, setIsErrorShowed] = useState(false);\n\n  const createMovie = (receivedMovie: MovieData) => {\n    setMovie({\n      title: receivedMovie.Title,\n      description: receivedMovie.Plot,\n      imgUrl: receivedMovie.Poster\n        || 'https://via.placeholder.com/360x270.png?text=no%20preview',\n      imdbUrl: receivedMovie.imdbID,\n      imdbId: receivedMovie.imdbID,\n    });\n  };\n\n  const findMovie = (event: React.FormEvent<HTMLElement>) => {\n    event.preventDefault();\n    setIsDataLoading(true);\n    getMovie(inputValue)\n      .then((res) => {\n        if ('Error' in res) {\n          setIsErrorShowed(true);\n        } else {\n          createMovie(res);\n        }\n      })\n      .finally(() => setIsDataLoading(false));\n  };\n\n  const handleMovieAdd = () => {\n    if (movie && !movies.some(item => item.imdbId === movie?.imdbId)) {\n      setMovies([...movies, movie]);\n    }\n\n    setMovie(null);\n    setInputValue('');\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={event => findMovie(event)}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={inputValue}\n              onChange={(e) => {\n                setInputValue(e.target.value);\n                setIsErrorShowed(false);\n              }}\n            />\n          </div>\n\n          {isErrorShowed && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              disabled={inputValue.trim() === ''}\n              className={classNames(\n                'button is-light',\n                {\n                  'is-loading': isDataLoading,\n                },\n              )}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              data-cy=\"addButton\"\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={!movie}\n              onClick={handleMovieAdd}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\" data-cy=\"previewContainer\">\n        <h2 className=\"title\">Preview</h2>\n\n        {movie && <MovieCard movie={movie} />}\n      </div>\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=4d79ecd3';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [movie, setMovie] = useState<Movie | null>(null);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          setMovies={setMovies}\n          movie={movie}\n          setMovie={setMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}